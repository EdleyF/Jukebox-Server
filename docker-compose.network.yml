services:
  api:
    restart: always
    build:
      context: .
    environment:
      - NODE_ENV=network
      - PORT=8000
      - HOST=localhost
      - JWT_SECRET_KEY=changeme
      - TOKEN_HEADER_KEY=Authorization
      - MONGO_URI=mongodb://root:changeme@mongo-jukebox-network:27017
      - SP_ID=${SP_ID}
      - SP_SECRET=${SP_SECRET}
      - LOG_LEVEL=debug
      - KAFKA_BROKERS=kafka-jbx:9092
    ports:
      - 8000:8000
    depends_on:
      - mongo-jukebox
      - kafka
    volumes:
      - ./server:/app/server
    networks:
      - cluster
    command: npm run dev

  proxy:
    build:
      context: ./proxy/
    ports:
      - 8080:8080
    networks:
      - cluster
    depends_on:
      - api
    volumes:
      - client-dist:/vol/client

  mongo-jukebox:
    image: mongo:6.0.9
    restart: always
    container_name: mongo-jukebox-network
    ports:
      - 27017:27017
    volumes:
      - mongo-data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=changeme
    command: mongod --quiet --logpath /dev/null --bind_ip_all
    networks:
      - cluster
  
  ####################################
  # Kafka Config
  ####################################
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper-jbx
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181
    networks:
      - cluster
    attach: false

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-jbx
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-jbx:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      # KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
    networks:
      - cluster
    attach: false

  # init-kafka:
  #   image: confluentinc/cp-kafka:latest
  #   depends_on:
  #     - kafka
  #   entrypoint: ['/bin/sh', '-c']
  #   networks:
  #     - cluster
      
  kafka-api:
    image: 'docker-spring-boot-postgres:latest'
    build:
      context: ./kafka-api
    container_name: kafka-api-jbx
    ports:
      - 9090:8080
    environment:
      - SPRING_PROFILES_ACTIVE=dev
    depends_on:
      - kafka

volumes:
  client-dist:
    name: client-dist
  mongo-data:

networks:
  cluster:
    name: jukebox_cluster
    driver: bridge
